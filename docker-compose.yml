version: '3.2'

services:

  db:
    image: postgres:alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      JUAAPP_DB_HOST: ${JUAAPP_DB_HOST}
      JUAAPP_DB_USER: ${JUAAPP_DB_USER}
      JUAAPP_DB_PASSWORD: ${JUAAPP_DB_PASSWORD}
      JUAAPP_DB_NAME: ${JUAAPP_DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data/pgdata
      - ./db/init-scripts:/docker-entrypoint-initdb.d
      - ./db/seedData:/seedData
    networks:
      - app-network

  api-freelancing:
    build:
      context: ./freelancing/backend
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./freelancing/backend:/usr/src/app
    ports:
      - 4000:4000
    networks:
      - app-network
    depends_on:
      - db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: db_juaapp
      POSTGRES_HOST: db
      JWT_SECRET: 'jugandofuchi'

  pdfs:
    build:
      context: ./pdfs
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./pdfs:/usr/src/app
    ports:
      - 4100:4100
    networks:
      - app-network

  api-accounting:
    build:
      context: ./accounting/backend/
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./accounting/backend:/usr/src/app
    ports:
      - 4200:4200
    depends_on:
      - db
    networks:
      - app-network

  app-freelancing:
    build:
      context: ./freelancing/frontend
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./freelancing/frontend:/usr/src/app
    ports:
      - 3000:80
    networks:
      - app-network

  app-accounting:
    build:
      context: ./accounting/frontend
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./accounting/frontend:/usr/src/app
    ports:
      - 3100:3100
    environment:
      PUBLIC_URL: /accounting/
    networks:
      - app-network

  haproxy:
    image: haproxy:1.8.12-alpine
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 5000:80
    depends_on:
      - api-freelancing
      - app-freelancing
      - app-accounting
      - api-accounting
    networks:
      - app-network

networks:
  app-network: