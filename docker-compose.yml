version: '3.2'

services:
  
  db:
    image: postgres:alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data/pgdata
      - ./db/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 3200:8080
    depends_on:
      - db
    networks:
      - app-network
  
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./backend:/usr/src/app
    ports:
      - 4000:4000
    networks:
      - app-network
    depends_on:
      - db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: db_juaapp
      POSTGRES_HOST: db
      JWT_SECRET: 'jugandofuchi'
      
      
  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    entrypoint: /usr/src/app/dev-entrypoint.sh
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 3000:80
    networks:
      - app-network
      
  haproxy:
    image: haproxy:1.8.12-alpine
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 5000:80
    depends_on:
      - api
      - app
    networks:
      - app-network
            
networks:
  app-network:      